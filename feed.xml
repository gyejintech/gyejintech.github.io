

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://0.0.0.0:4000/</id>
  <title>Jogyejin</title>
  <subtitle>기술블로그 &amp;&amp; 프로젝트공유</subtitle>
  <updated>2024-11-26T19:46:54+09:00</updated>
  <author>
    <name>Jogyejin</name>
    <uri>http://0.0.0.0:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://0.0.0.0:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="http://0.0.0.0:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Jogyejin </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>CSS 레이아웃</title>
    <link href="http://0.0.0.0:4000/posts/css_layout/" rel="alternate" type="text/html" title="CSS 레이아웃" />
    <published>2024-09-04T12:33:00+09:00</published>
  
    <updated>2024-09-04T12:33:00+09:00</updated>
  
    <id>http://0.0.0.0:4000/posts/css_layout/</id>
    <content src="http://0.0.0.0:4000/posts/css_layout/" />
    <author>
      <name>Jogyejin</name>
    </author>

  
    
    <category term="Develop" />
    
    <category term="Css" />
    
  

  
    <summary>
      





      
  레이아웃(Layout)이란? : 구성 요소를 공간에 효과적으로 배열하는 일,  또는 그 기술
웹 요소를 올바른 장소에 배치하는 기술을 말한다.
CSS 레이아웃 기술은 형제 요소들을 가지런히 정렬할 수 있게 해주며 요소가 컨테이너 내부에 어떤 위치에 놓이게 될지 결정할 수 있다.


Flexbox

  플렉스박스는 행 또는 열을 주축으로 설정하여 웹 요소를 배치 및 정렬하는 1차원 레이아웃 방식을 말한다.
요소의 배치와 정렬은 플렉스 컨테이너와 플렉스 아이템간의 상호작용을 통해 결정된다.

  
    플렉스 컨테이너 : 플렉스박스 방식으로 레이아웃을 결정할 요소
    플렉스 아이템: 플렉스 컨테이너 내부에서 플렉스박스 방식으로 배치되는 요소 
  


##

Flexbox 기본 사용법

Flex...
    </summary>
  

  </entry>

  
  <entry>
    <title>Javascript join 메서드</title>
    <link href="http://0.0.0.0:4000/posts/javascript_join/" rel="alternate" type="text/html" title="Javascript join 메서드" />
    <published>2024-09-01T12:33:00+09:00</published>
  
    <updated>2024-09-01T12:33:00+09:00</updated>
  
    <id>http://0.0.0.0:4000/posts/javascript_join/</id>
    <content src="http://0.0.0.0:4000/posts/javascript_join/" />
    <author>
      <name>Jogyejin</name>
    </author>

  
    
    <category term="Develop" />
    
    <category term="Javascript" />
    
  

  
    <summary>
      





      join 메서드 이해하기


  join 메서드는 배열 요소를 모두 연결해 하나의 문자열로 반환한다






join 메서드 사용해보기
let arr = ["안녕","자바스크립트","반가워"];

console.log(arr.join()); // 출력: 안녕,자바스크립트,반가워
console.log(arr.join("-")); // 출력: 안녕-자바스크립트-반가워


    </summary>
  

  </entry>

  
  <entry>
    <title>Javascript includes 메서드</title>
    <link href="http://0.0.0.0:4000/posts/javascript_includes/" rel="alternate" type="text/html" title="Javascript includes 메서드" />
    <published>2024-09-01T12:33:00+09:00</published>
  
    <updated>2024-09-01T12:33:00+09:00</updated>
  
    <id>http://0.0.0.0:4000/posts/javascript_includes/</id>
    <content src="http://0.0.0.0:4000/posts/javascript_includes/" />
    <author>
      <name>Jogyejin</name>
    </author>

  
    
    <category term="Develop" />
    
    <category term="Javascript" />
    
  

  
    <summary>
      





      includes 메서드 이해하기


  includes 메서드는 배열에 특정 요소가 있는지를 판단할 때 사용되는 메서드이다 배열에서 주어진 요소가 포함되어 있으면 true를 그렇지 않으면 false를 반환한다






includes 메서드 사용해보기
const arr = [1,2,3,4,5];

console.log(arr.includes(3)); //출력 : true
console.log(arr.includes(7)); //출력 : false


    </summary>
  

  </entry>

  
  <entry>
    <title>React Map 예제</title>
    <link href="http://0.0.0.0:4000/posts/react_example_map/" rel="alternate" type="text/html" title="React Map 예제" />
    <published>2024-08-01T12:33:00+09:00</published>
  
    <updated>2024-08-01T12:33:00+09:00</updated>
  
    <id>http://0.0.0.0:4000/posts/react_example_map/</id>
    <content src="http://0.0.0.0:4000/posts/react_example_map/" />
    <author>
      <name>Jogyejin</name>
    </author>

  
    
    <category term="Framework" />
    
    <category term="React" />
    
  

  
    <summary>
      





      Map 함수 이해하기
Map 함수는 React에서 제공하는 함수는 아니며 Javascript 언어에서 사용할 수 있는 함수이다.
Map함수를 사용하면 콜백 함수를 이용해 각각의 배열 요소를 호출해서 그 값을 변환할 수 있게 해준다. 
React예제로 Map을 확인하는 이유는 React에서 어떠한 데이터를 반복적으로 렌더링하거나 컴포넌트를 렌더링할 때 Map함수를 많이 사용함으로, 
이번 예제를 통해 Map함수에대해 자세히 알아보도록 한다

✏️리액트에서 동적인 배열을 렌더링해야 할 때는 자바스크립트 배열 내장함수인 map()을 사용하여 일반 데이터 배열을 리액트 엘리먼트로 이루어진 배열로 변환이 가능하다 실제로 리액트에서 배열은 게시글, 리스트, 피드를 표시하는데에 자주사용된다

Map 함수 사용법
a...
    </summary>
  

  </entry>

  
  <entry>
    <title>React Route</title>
    <link href="http://0.0.0.0:4000/posts/react_Route/" rel="alternate" type="text/html" title="React Route" />
    <published>2024-07-16T12:33:00+09:00</published>
  
    <updated>2024-07-16T12:33:00+09:00</updated>
  
    <id>http://0.0.0.0:4000/posts/react_Route/</id>
    <content src="http://0.0.0.0:4000/posts/react_Route/" />
    <author>
      <name>Jogyejin</name>
    </author>

  
    
    <category term="Framework" />
    
    <category term="React" />
    
  

  
    <summary>
      





      라우팅 이해하기


  라우팅이란 웹 서비스에있어서 페이지 이동을 수행시켜주는 기능이다 즉,
사용자가 요청한 URL에 따라 해당 URL에 맞는 페이지로 이동 시켜서 보여주는 것이다 
리액트의 라우팅 구현은 웹 페이지를 어디서 만드느냐에 따라 적절한 페이지를 반환하는 일련의 과정이며 서버 사이드 렌더링과, 클라이언트 사이드 렌더링으로 구분된다 리액트는 클라이언트 사이드 렌더링 방식을 채택하며 두 방식의 차이는 아래 SSR, CSR 를 이해하자






리액트 라우터 이해하기
라우팅을 위한 기능과 코드를 개발자 모두가 알 필요는 없다 리액트의 라우터라는 페이지 라우팅 전용 라이브러리를 사용하면 굳이 개발자가 구현하지 않아도 필요한 기능을 손쉽게 구현할 수 있다 





리액트 라우터 설치하기

npm ...
    </summary>
  

  </entry>

</feed>


